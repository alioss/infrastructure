# Install NGINX, and prepare the OME (UoD/SLS) prerequisites

- hosts: www
  environment:
      PATH: /usr/local/bin:{{ ansible_env.PATH }}
  pre_tasks:
    - name: Install open-vm-tools if system is a VMware vm
      become: yes
      yum:
        name: open-vm-tools
        state: latest
      when: >
           ((ansible_virtualization_type is defined)
           and (ansible_virtualization_type == "VMware"))

    # Two tasks here which could instead ues the role at 
    # https://github.com/openmicroscopy/ansible-role-lvm-partition/, but that role 
    # will change the device name to symlinks rather than existing device ID.
    - name: storage | Resize root LV 
      tags: lvm
      become: yes
      lvol:
        lv: root
        vg: "{{ lvm_vgname  }}"
        size: "{{ provision_root_lvsize }}"
        shrink: no

    - name: storage | Resize root FS 
      tags: lvm
      become: yes
      filesystem:
        fstype: "{{ filesystem }}"
        dev: /dev/mapper/{{ lvm_vgname }}-root
        resizefs: yes

    - name: NGINX - SSL File Deployment - prepare directory
      become: yes
      file:
        path: "{{ nginx_ssl_files_path }}"
        state: directory
        owner: root
        group: root
        mode: "u=r,go=" 

    - name: NGINX - SSL File Deployment
      become: yes
      copy:
        dest="{{ item.key }}"
        content="{{ item.value.content }}"
        owner="{{ item.value.owner }}"
        group="{{ item.value.group }}"
        mode="{{ item.value.mode }}"
      with_dict: "{{ nginx_ssl_cert_files }}"
      no_log: true

  roles:
    # Now OME are using RHEL without Spacewalk, the current best-method of
    # checking `is server deployed in Dundee/SLS` is checking for the SLS nameservers.
    - role: openmicroscopy.system-monitor-agent
      tags: monitoring
      when: "'10.1.255.216' in ansible_dns.nameservers"

    - role: openmicroscopy.jekyll-build
      tags: jekyll
      jekyll_build_git_repo: "https://github.com/openmicroscopy/www.openmicroscopy.org"
      jekyll_build_force_rebuild: True
      jekyll_build_config: ['_config.yml', '_prod.yml']

    - role: openmicroscopy.nginx_proxy
      tags: nginxconf
      nginx_proxy_worker_processes: "{{ ((ansible_processor_count * ansible_processor_cores) / 2) |round|int }}"
      nginx_proxy_ssl: True
      nginx_proxy_ssl_certificate: "{{ nginx_ssl_files_path }}/{{ nginx_ssl_cert_filename }}"
      nginx_proxy_ssl_certificate_key: "{{ nginx_ssl_files_path }}/{{ nginx_ssl_key_filename }}"
      nginx_proxy_http2: True
      nginx_proxy_force_ssl: False
      nginx_proxy_404: "/404.html"

  post_tasks:
    - name: NGINX - Performance tuning - worker processes
      become: yes
      replace:
        path: "/etc/nginx/nginx.conf"
        regexp: '^worker_processes\s+\d+;'
        replace: "worker_processes {{ ((ansible_processor_count * ansible_processor_cores) / 2) |round|int }};"

    # cf https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
    - name: NGINX - Performance tuning - worker connections
      become: yes
      replace:
        path: "/etc/nginx/nginx.conf"
        regexp: 'worker_connections\s+\d+;'
        replace: "worker_connections 65000;"
            
    - name: Check_MK logwatch plugin | check for plugin existence
      tags: monitoring
      stat:
        path: "{{ check_mk_agent_plugin_path }}/mk_logwatch"
      register: check_mk_logwatch_plugin_st

    - name: Check_MK logwatch plugin | activate the plugin
      tags: monitoring
      become: yes
      command: cp "{{ check_mk_agent_plugin_path }}/mk_logwatch" /usr/share/check-mk-agent/plugins/ creates=/usr/share/check-mk-agent/plugins/mk_logwatch
      when: check_mk_logwatch_plugin_st.stat.exists

    - name: Check_MK logwatch plugin | check for default config file
      tags: monitoring
      stat:
        path: "{{ check_mk_agent_config_example_path }}/logwatch.cfg"
      register: check_mk_logwatch_plugin_conf_st
      
    - name: Check_MK logwatch plugin | copy the default config
      tags: monitoring
      become: yes
      command: cp "{{ check_mk_agent_config_example_path }}/logwatch.cfg" "{{ check_mk_agent_config_path }}/logwatch.cfg" creates="{{ check_mk_agent_config_path }}/logwatch.cfg"
      when: check_mk_logwatch_plugin_conf_st.stat.exists

  vars:
    # Check_MK (system monitoring) paths
    check_mk_agent_plugin_path: /usr/share/check-mk-agent/available-plugins
    check_mk_agent_config_example_path: /usr/share/check_mk/agents/cfg_examples
    check_mk_agent_config_path: /etc/check-mk-agent

    filesystem: "ext4"
    
    # Vars for role openmicroscopy.nginx_proxy
    nginx_proxy_backends:
      # Proxy for phpBB forums
      - location: /community
        server: https://www-legacy.openmicroscopy.org/community
      # Proxy for QA application
      - location: /qa2
        server: https://www-legacy.openmicroscopy.org/qa2
      - location: /static
        server: https://www-legacy.openmicroscopy.org
      # Proxy locations for OME Data Model schemas
      - location: /Schemas
        server: https://www-legacy.openmicroscopy.org/Schemas
      - location: /XMLschemas
        server: https://www-legacy.openmicroscopy.org/XMLschemas
      - location: /schema_doc
        server: https://www-legacy.openmicroscopy.org

    nginx_proxy_redirect_map_locations:
    # TODO: change to 301 when we're happy
    - location: "~ ^/(site)($|/)"
      code: 302
    - location: "~ ^/(omero-blog)($|/)"
      code: 302
    - location: "~ ^/(info)($|/)"
      code: 302

    nginx_proxy_redirect_map:
    # by default redirect to the 404 page
    - match: default
      dest: /404.html
    - match: "~/info/?$"
      dest: /
    - match: "~/info/(?<link>.*)$"
      dest: https://www-legacy.openmicroscopy.org/info/$link
    - match: "~/omero-blog.*"
      dest: http://blog.openmicroscopy.org
    - match: "~/site/?$"
      dest: /
    - match: "~/site/news/?$"
      dest: /announcements

    # about
    - match: "~/site/about/?$"
      dest: /about
    - match: "~/site/about/licensing-attribution/?$"
      dest: /licensing
    - match: "~/site/about/ome-contributors/?$"
      dest: /contributors
    - match: "~/site/about/partners/?$"
      dest: /commercial-partners
    - match: "~/site/about/development-teams/?$"
      dest: /teams
    - match: "~/site/about/(?<link>.*)$"
      dest: https://www-legacy.openmicroscopy.org/site/about/$link

    # products
    - match: "~/site/products/?$"
      dest: /products
    - match: "~/site/products/omero/?$"
      dest: /omero
    - match: "~/site/products/omero/feature-list/?$"
      dest: /omero/new
    - match: "~/site/products/omero/big-images-support/?$"
      dest: /omero/view/
    - match: "~/site/products/bio-formats/?$"
      dest: /bio-formats
    - match: "~/site/products/ome-files-cpp/?$"
      dest: /ome-files
    - match: "~/site/products/(?<link>.*)$"
      dest: https://www-legacy.openmicroscopy.org/site/products/$link

    # community
    - match: "~/site/community/?$"
      dest: /support
    - match: "~/site/community/mailing-lists/?$"
      dest: /support
    - match: "~/site/community/jobs/?$"
      dest: /careers
    - match: "~/site/community/(?<link>.*)$"
      dest: https://www-legacy.openmicroscopy.org/site/community/$link

    # support
    - match: "~/site/support/?$"
      dest: /docs
    - match: "~/site/support/(?<link>.*)$"
      dest: https://www-legacy.openmicroscopy.org/site/support/$link

    nginx_proxy_direct_locations:
    - location: "/"
      root: /var/www/localhost/html
      index: index.html
