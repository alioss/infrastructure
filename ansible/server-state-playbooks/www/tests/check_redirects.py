# Test redirects
#
# Test the default host:
#   pytest check_redirects.py
#
# Test a different host:
#   HOST=http://www-dev.openmicroscopy.org pytest check_redirects.py

import os
import pytest
import requests

HOST = os.getenv('HOST', 'https://ome-www.openmicroscopy.org')
LEGACY_HOST = os.getenv('LEGACY_HOST', 'https://www-legacy.openmicroscopy.org')
suffixes = ['', '/']
redirect_uris = [
    ('/site', '/'),
    ('/site/about', '/about'),
    ('/site/about/licensing-attribution', '/licensing'),
    ('/site/about/ome-contributors', '/contributors'),
    ('/site/about/partners', '/commercial-partners'),
    ('/site/about/development-teams', '/teams'),

    ('/site/community', '/support'),
    ('/site/community/mailing-lists', '/support'),
    ('/site/community/jobs', '/careers'),

    ('/site/products', '/products'),
    ('/site/products/bio-formats', '/bio-formats'),
    ('/site/products/omero', '/omero'),
    ('/site/products/omero/feature-list', '/omero/new'),

    ('/site/support', '/docs'),
    ('/site/news', '/announcements'),
]
blog_uris = ('/omero-blog', 'http://blog.openmicroscopy.org')
legacy_uris = [
    '/site/about/publications',
    '/site/about/who-ome',
    '/site/about/what-omero/overview',
    '/site/about/roadmap',
    '/site/about/project-history',
    '/site/community/scripts',
    '/site/community/minutes',
    '/site/community/minutes/conference-calls/2017',
    '/site/products/ome-tiff',
    '/site/products/partner',
    '/site/products/omero/secvuln',
    '/site/products/ome5',
    '/site/support/omero5.3',
    '/site/support/bio-formats5.5',
    '/site/support/omero',
    '/site/support/omero5.3/users/history.html',
    '/site/support/omero5.3/sysadmins/index.html',
    '/site/support/omero5.3/sysadmins/unix/server-installation.html',
]
content_uris = [
    ('/community', 'This page was generated by phpBB'),
    ('/community/ucp.php?mode=login', ' Login</title>'),
    ('/community/viewtopic.php?f=6&t=8319',
     'UserId issues from Matlab.</title>'),
    ('/community/viewtopic.php?f=11&t=8320',
     'View topic - Release of Bio-Formats 5.5.3</title>'),
    ('/community/viewtopic.php?p=18303#p18303',
     '<div id="p18303" class="post bg1">'),
    ('/community/index.php', 'Index page</title>'),

    ('/Schemas', 'Open Microscopy Environment Schemas</title>'),
    ('/Schemas/ROI', 'Open Microscopy Environment ROI Schemas</title>'),
    ('/Schemas/broken-link', 'Open Microscopy Environment Schemas</title>'),

    ('/qa2', '<strong>OMERO.qa</strong>  provides support services'),
    ('/qa2/qa/feedback/17777', '<a href="/qa2/qa/feedback/">Go back</a>'),
    ('/qa2/qa/upload', 'Uploading sample images'),
    ('/qa2/qa/feedback/?status=1',
        'If you cannot view feedback you previously submitted'),
    ('/qa2/registry/demo_account', 'Requesting a demo server account'),
    ('/qa2/registry/statistic', 'File statistics.'),
]
content_uris_no_slash = [
    ('/Schemas/OME/2016-06/ome.xsd', 'Schema June 2016'),
    ('/Schemas/OME/2015-01/ome.xsd', 'Schema January 2015'),
    ('/Schemas/ROI/2015-01/ROI.xsd', 'Region of Interest'),
    ('/XMLschemas/OME/FC/ome.xsd', 'The OME element is a container'),
    ('/XMLschemas/CA/RC1/CA.xsd',
        'Conforms to w3c http://www.w3.org/2001/XMLSchema'),
    ('/XMLschemas/STD/RC2/STD.xsd', 'Defines a semantic type'),
]


# Based on
# https://github.com/openmicroscopy/infrastructure/blob/master/ansible/server-state-playbooks/www/www.yml
@pytest.mark.parametrize('uri,expect', redirect_uris)
@pytest.mark.parametrize("suffix", suffixes)
def test_redirect_with_slash(uri, expect, suffix):
    r = requests.head('%s%s%s' % (HOST, uri, suffix))
    assert r.is_redirect
    assert r.headers['Location'] == '%s%s' % (HOST, expect)


@pytest.mark.parametrize("suffix", suffixes)
def test_redirect_blog(suffix):
    uri, expect = blog_uris
    r = requests.head('%s%s%s' % (HOST, uri, suffix))
    assert r.is_redirect
    assert r.headers['Location'] == expect


@pytest.mark.parametrize('uri', legacy_uris)
@pytest.mark.parametrize('suffix', suffixes)
def test_legacy_redirects(uri, suffix):
    r = requests.head('%s%s%s' % (HOST, uri, suffix))
    assert r.is_redirect
    assert r.headers['Location'] == '%s%s%s' % (LEGACY_HOST, uri, suffix)


def test_404():
    uri = '/non-existent/path'
    r = requests.head('%s%s' % (HOST, uri))
    assert r.status_code == 404


@pytest.mark.parametrize('uri,content', content_uris)
@pytest.mark.parametrize('suffix', suffixes)
def test_content(uri, content, suffix):
    r = requests.get('%s%s%s' % (HOST, uri, suffix))
    assert content in r.text


@pytest.mark.parametrize('uri,content', content_uris_no_slash)
def test_content_no_slash(uri, content):
    r = requests.get('%s%s' % (HOST, uri))
    assert content in r.text
