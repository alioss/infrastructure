---
# Playbook for provisioning Jenkins CI nodes in the UoD openstack
# cloud.
#
# Usage:
#   Provision machine:
#   $ ansible-playbook -e "ci_host=<host>" -i inventory/ci-hosts ansible/os-ci-create-machine.yml --vault-password-file=<vault>
#
#   Initial setup:
#     (FreeBSD)
#       $ ssh freebsd@<host> # To add host key fingerprint
#       $ ansible-playbook -l <host> -e "ansible_user=freebsd" -u freebsd -i inventory/ci-openstack-hosts ansible/ci-initial-setup.yml --vault-password-file=<vault>
#
#     (Ubuntu)
#       $ ansible-playbook -l <host> -e "ansible_user=ubuntu" -u ubuntu -i inventory/ci-openstack-hosts ./ci-initial-setup.yml --vault-password-file=<vault>
#
#     (Windows)
#       nova get-password ci-<host> | base64 -d | openssl rsautl -decrypt -inkey ~/.ssh/<ci key>
#       ==> Admin password
#       $ ansible-playbook -l <host> -e "ansible_user=Admin ansible_password=<password>" -u Admin -i inventory/ci-openstack-hosts ansible/ci-initial-setup.yml --vault-password-file=<vault>

- hosts: localhost
  connection: local

  tasks:
    - name: os-ci-create-machine | Create machine
      os_server:
        name: "{{ hostvars[ci_host]['openstack_machine']['name'] }}"
        state: present
        image: "{{ hostvars[ci_host]['openstack_machine']['image'] }}"
        key_name: "{{ hostvars[ci_host]['openstack_machine']['key_name'] }}"
        flavor: "{{ hostvars[ci_host]['openstack_machine']['flavour'] }}"
        network: "{{ hostvars[ci_host]['openstack_machine']['network'] }}"
        floating_ips:
          - "{{ hostvars[ci_host]['openstack_machine']['ipv4_addr'] }}"
        meta:
          hostname: "{{ ci_host }}"
          groups: "{{ hostvars[ci_host]['openstack_machine']['groups'] }}"
        security_groups: "{{ hostvars[ci_host]['openstack_machine']['security_groups'] }}"

    - name: os-ci-create-machine | Create volumes
      os_volume:
        state: present
        size: "{{ item.size }}"
        display_name: "{{ hostvars[ci_host]['openstack_machine']['name'] }}-{{ item.name }}"
      with_items: "{{ hostvars[ci_host]['openstack_volumes'] }}"

    - name: os-ci-create-machine | Attach volumes
      os_server_volume:
        state: present
        server: "{{ hostvars[ci_host]['openstack_machine']['name'] }}"
        volume: "{{ hostvars[ci_host]['openstack_machine']['name'] }}-{{ item.name }}"
        device: "{{ item.device }}"
      with_items: "{{ hostvars[ci_host]['openstack_volumes'] }}"

- hosts: localhost
  connection: local

  tasks:
    - name: os-ci-create-machine | Stop machine (to attach new volumes)
      os_server_actions:
        server: "{{ hostvars[ci_host]['openstack_machine']['name'] }}"
        action: stop
    - name: os-ci-create-machine | Start machine (to attach new volumes)
      os_server_actions:
        server: "{{ hostvars[ci_host]['openstack_machine']['name'] }}"
        action: start
